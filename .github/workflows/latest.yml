name: Build and Release latest test

on:
        workflow_dispatch:

jobs:
        create_release:
                runs-on: ubuntu-latest
                outputs:
                        upload_url: ${{ steps.create_release.outputs.upload_url }}
                        version: ${{ steps.get_version.outputs.version }}

                steps:
                - name: Checkout code
                  uses: actions/checkout@v2

                - name: Setup Node.js
                  uses: actions/setup-node@v2
                  with:
                                node-version: '20' 

                - name: Get version
                  id: get_version
                  run: |
                                echo "::set-output name=version::$(node -p "require('./package.json').version")"

        build_and_upload:
                needs: create_release
                runs-on: ${{ matrix.os }}
                strategy:
                        matrix:
                                os: [ubuntu-latest, windows-latest, macos-latest]

                steps:
                - name: Install dependencies
                  run: |
                                npm install
                  working-directory: ./
                        
                - name: Build Electron App
                  run: |
                                npm run make
                  working-directory: ./

                - name: Compress directory
                  run: |
                        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                                7z a my_directory.zip  out/make/squirrel.windows/x64/Slajdomat-*.exe 
                                # 7z a my_directory.zip ./out/Slajdomat-win32-x64
                        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                                # on macos, this directory contains the smallest file
                                mv ./out/make/zip/darwin/x64/*zip my_directory.zip
                        else
                                zip -r my_directory.zip ./out/
                        fi
                  shell: bash

                - name: Upload to release
                  uses: svenstaro/upload-release-action@v2
                  with:
                    repo_token: ${{ secrets.GITHUB_TOKEN }}
                    file: my_directory.zip
                    asset_name: slajdomat-${{ matrix.os }}.zip
                    tag: ${{ github.ref }}
                    overwrite: true
                    body: "This is my release text"