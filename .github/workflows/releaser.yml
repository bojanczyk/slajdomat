name: Build and Release

on:
    workflow_dispatch:

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
                node-version: '20' 

        - name: Get version
          id: get_version
          run: |
                echo "::set-output name=version::$(node -p "require('./package.json').version")"
            
        - name: Install dependencies
          run: |
                npm install
          working-directory: ./
            
        - name: Build Electron App
          run: |
                npm run make
          working-directory: ./

        - name: Compress directory
          run: |
                if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                    Compress-Archive -Path ./out/* -DestinationPath my_directory.zip
                else
                    zip -r my_directory.zip ./out/
                fi

        - name: Get release
          id: get_release
          run: |
                  response=$(curl --silent --show-error --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases")
                  upload_url=$(echo "$response" | jq -r '.[] | select(.name=="Latest build") | .upload_url' | sed -e "s/{?name,label}//")
                  echo "::set-output name=upload_url::$upload_url"
          shell: bash
          
        - name: Download artifacts
          uses: actions/download-artifact@v2
          

        - name: Upload Release Asset
          id: upload_release_asset
          uses: actions/upload-release-asset@v1
          env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
                upload_url: ${{ steps.get_release.outputs.upload_url }}
                asset_path: ./my_directory.zip
                asset_name: my_directory-${{ matrix.os }}.zip
                asset_content_type: application/zip